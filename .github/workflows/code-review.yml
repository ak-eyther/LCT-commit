name: Automated Code Review

on:
  push:
    branches:
      - main
      - feature/**
      - fix/**
  pull_request:
    branches:
      - main

jobs:
  coderabbit-review:
    name: Coderabbit AI Review
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Coderabbit Review
        uses: coderabbitai/coderabbit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Coderabbit will automatically review based on .coderabbit.yaml config

      - name: Comment with Review Summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ü§ñ **Coderabbit AI Review Complete!**\n\nCheck the PR comments for detailed feedback on:\n- Code quality\n- Security issues\n- Performance improvements\n- Best practices\n- Documentation\n\n‚úÖ Review the suggestions and make updates as needed.'
            })

  lint-check:
    name: Basic Code Quality Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check HTML validity
        run: |
          echo "Checking HTML files for syntax errors..."
          # Basic HTML validation
          for file in *.html; do
            if [ -f "$file" ]; then
              echo "Checking $file..."
              # Check for basic syntax issues
              if grep -q "<html" "$file" && grep -q "</html>" "$file"; then
                echo "‚úÖ $file has valid HTML structure"
              else
                echo "‚ö†Ô∏è  $file might have structural issues"
              fi
            fi
          done

      - name: Check for console.log statements
        run: |
          echo "Checking for console.log statements..."
          if grep -r "console\.log" --include="*.html" --include="*.js" .; then
            echo "‚ö†Ô∏è  Found console.log statements. Consider removing for production."
          else
            echo "‚úÖ No console.log statements found"
          fi

      - name: Check for TODO comments
        run: |
          echo "Checking for TODO comments..."
          if grep -r "TODO\|FIXME\|HACK" --include="*.html" --include="*.js" .; then
            echo "üìù Found TODO/FIXME comments. Track these as issues."
          else
            echo "‚úÖ No pending TODO items"
          fi

      - name: Check file sizes
        run: |
          echo "Checking file sizes..."
          find . -name "*.html" -o -name "*.js" -o -name "*.css" | while read file; do
            size=$(wc -c < "$file")
            if [ $size -gt 1000000 ]; then
              echo "‚ö†Ô∏è  $file is larger than 1MB ($size bytes)"
            else
              echo "‚úÖ $file size is acceptable ($size bytes)"
            fi
          done

  security-check:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for sensitive data
        run: |
          echo "Scanning for potential sensitive data..."

          # Check for common patterns
          if grep -r -i "password\|api[_-]key\|secret\|token" --include="*.html" --include="*.js" --exclude="*.md" .; then
            echo "‚ö†Ô∏è  Found potential sensitive data patterns. Please review."
            exit 1
          else
            echo "‚úÖ No obvious sensitive data found"
          fi

      - name: Check for hardcoded credentials
        run: |
          echo "Checking for hardcoded credentials..."

          # Pattern matching for common credential formats
          if grep -r -E "(apikey|api_key|password|passwd|pwd|token|secret)\s*[:=]\s*['\"][^'\"]+['\"]" --include="*.html" --include="*.js" .; then
            echo "‚ö†Ô∏è  Found potential hardcoded credentials. Please use environment variables."
            exit 1
          else
            echo "‚úÖ No hardcoded credentials found"
          fi

  comment-on-push:
    name: Notify on Push
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get commit message
        id: commit
        run: |
          echo "message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT
          echo "author=$(git log -1 --pretty=%an)" >> $GITHUB_OUTPUT
          echo "sha=$(git log -1 --pretty=%h)" >> $GITHUB_OUTPUT

      - name: Create commit comment
        uses: actions/github-script@v7
        with:
          script: |
            const { message, author, sha } = process.env;

            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `ü§ñ **Automated Code Review Triggered**

**Commit:** ${sha}
**Author:** ${author}
**Message:** ${message}

‚úÖ Coderabbit AI is reviewing this commit...
‚úÖ Security checks running...
‚úÖ Code quality checks in progress...

Results will appear in this thread shortly.

---
üìã **LCT Success Matrix Project** - Healthcare Claims Adjudication
*Automated review by Coderabbit & GitHub Actions*`
            })
